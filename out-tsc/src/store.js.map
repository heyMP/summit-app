{"version":3,"file":"store.js","sourceRoot":"","sources":["../../src/store.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ReactiveController, ReactiveControllerHost } from 'lit';\nimport { LitElement } from 'lit';\nimport type { Interpreter, Subscription } from 'xstate';\nimport { assign, createMachine, createSchema, interpret, spawn, send, sendParent } from 'xstate';\nimport type { Order, OrderId } from './machines/orders.js';\nimport { orderMachine } from './machines/orders.js';\nimport { socketCallback } from './machines/socket.js';\nimport type { ConfigurationEvent } from './machines/socket.js';\n\nexport type OrderRef = Interpreter<Order> | null;\n\nexport interface AppContext {\n\tname: string;\n\tpoints: number;\n\t// how many orders are fulfilled\n\tfulfilled: number;\n\t// how many orders need to be fulfilled\n\tbacklog: number;\n\t// orders\n\torders: [Order?];\n\t// current active order\n\torderRef: OrderRef;\n\t// current active order\n\torderId: OrderId;\n}\n\n/** @todo separate these events into their machine files and merge them here. */\nexport type AppEvents =\n  | { type: 'NEXT' }\n  | { type: 'PREVIOUS' }\n  | { type: 'FULFILL', orderId: OrderId }\n  | { type: 'ORDER_COMPLETE' }\n\t| ConfigurationEvent\n\nexport type AppTypestate =\n  | { value: 'init', context: AppContext }\n  | { value: 'default', context: AppContext }\n  | { value: 'fulfill', context: AppContext }\n  | { value: 'order', context: AppContext }\n\nexport const getLocalStorage = () => {\n\treturn {\n\t\tgame: {\n\t\t\tid: localStorage.getItem(\"gameId\")\n\t\t},\n\t\tplayer: {\n\t\t\tuserid: localStorage.getItem(\"playerId\"),\n\t\t\tusername: localStorage.getItem(\"username\")\n\t\t}\n\t};\n};\n\t\nexport const updateLocalStorage = (gameId: string, playerId: string, username: string) => {\n\tlocalStorage.setItem(\"gameId\", gameId);\n\tlocalStorage.setItem(\"playerId\", playerId);\n\tlocalStorage.setItem(\"username\", username);\n};\n\n// Edit your machine(s) here\nexport const storeMachine = createMachine({\n\tid: \"app\",\n\tinitial: 'init',\n\tschema: {\n\t\tcontext: createSchema<AppContext>(),\n\t\tevents: createSchema<AppEvents>(),\n\t},\n\tcontext: {\n\t\tname: 'Pasta Flower',\n\t\tpoints: 0,\n\t\tfulfilled: 0,\n\t\tbacklog: 3,\n\t\torderId: null,\n\t\torders: [{ orderId: 1, countdown: 55, state: 'pending' }],\n\t\torderRef: null,\n\t},\n\tinvoke: {\n\t\tid: 'websocket',\n\t\tsrc: socketCallback,\n\t},\n\ton: {\n\t\tCONFIGURATION: { actions: 'configuration' }\n\t},\n\tstates: {\n\t\tinit: {\n\t\t\ton: {\n\t\t\t\tNEXT: { target: 'default' }\n\t\t\t},\n\t\t\tafter: {\n        2000: {\n          target: 'default'\n        }\n      },\n\t\t},\n\t\tdefault: {\n\t\t\ton: {\n\t\t\t\tPREVIOUS: { target: 'init' },\n\t\t\t\tFULFILL: { target: 'order', actions: 'fulfill' }\n\t\t\t}\n\t\t},\n\t\torder: {\n\t\t\tinvoke: {\n\t\t\t\tid: 'order',\n\t\t\t\tsrc: orderMachine,\n\t\t\t\tdata: (context, event) => context.orders.find(order => order?.orderId === context.orderId),\n\t\t\t\tonDone: { target: 'default' }\n\t\t\t},\n\t\t}\n\t},\n}, {\n\t// Actions (anything that directly mutates state)\n\tactions: {\n\t\t// @ts-ignore\n\t\tconfiguration: assign((context, event) => {\n\t\t\tif (event.type === 'CONFIGURATION') {\n\t\t\t\t// updateLocalStorage\n\t\t\t\tupdateLocalStorage(event.game.id, event.player.userid, event.player.username);\n\n\t\t\t\treturn {\n\t\t\t\t\tname: event.player.username\n\t\t\t\t}\n\t\t\t}\n\t\t}),\n\t\t// @ts-ignore\n\t\tfulfill: assign((context, event) => {\n\t\t\t// this looks weird but it was the only way typescript would\n\t\t\t// accept it.\n\t\t\tif (event.type === 'FULFILL') {\n\t\t\t\treturn {\n\t\t\t\t\torderId: event.orderId\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {};\n\t\t}),\n\t\torderShip: assign((context, event) => {\n\t\t\treturn { orderId: null, fulfilled: context.fulfilled + 1 }\n\t\t}),\n\t},\n})\n\nexport const store = interpret(storeMachine).start();\nexport type Store = typeof store;\n\n/**\n * Reactive Controller method for adding the store to your element\n */\nexport class StoreController implements ReactiveController {\n  // reference to the host element using this controller\n  host: ReactiveControllerHost & Element;\n  store: Store;\n  subscription?: Subscription;\n\n  constructor(host: ReactiveControllerHost & Element) {\n    (this.host = host).addController(this);\n    this.store = store;\n  }\n\n\thostConnected() {\n\t\tthis.subscription = this.store.subscribe(() => {\n\t\t\tthis.host.requestUpdate();\n\t\t\t// add hook on the class called `storeUpdated` for\n\t\t\t// developer access.\n\t\t\t// @ts-ignore\n\t\t\tif (!!this.host.storeUpdated)\n\t\t\t\t// @ts-ignore\n\t\t\t\tthis.host.storeUpdated();\n\t\t})\n\t}\n\n  hostDisconnected() {\n    this.subscription?.unsubscribe();\n  }\n}\n\n/**\n * Subscribe to a specific Interpretor in a store.\n */\nexport class StoreSubscriptionController<T> implements ReactiveController {\n  // reference to the host element using this controller\n  host: ReactiveControllerHost & Element;\n  store: T | null = null;\n  subscription?: Subscription;\n\n  constructor(host: ReactiveControllerHost & Element, _store: T) {\n    (this.host = host).addController(this);\n    this.store = _store;\n\t\t// @ts-ignore\n\t\tthis.subscription = this.store.subscribe(() => {\n\t\t\tthis.host.requestUpdate();\n\t\t});\n  }\n\n  hostDisconnected() {\n    this.subscription?.unsubscribe();\n  }\n}\n\n/**\n * Base Class for giving components access to the store. Uses the StoreController\n * plus sets up a local store prop for easy access.\n */\nexport class StoreBase extends LitElement {\n  protected store;\n\tprotected order: OrderRef = null;\n\n  constructor() {\n    super();\n    this.store = new StoreController(this).store;\n  }\n\n\tstoreUpdated() {\n\t\tif (this.store.children.has('order')) {\n\t\t\tthis.order = new StoreSubscriptionController(this, this.store.children.get('order') as OrderRef).store;\n\t\t}\n\t\telse {\n\t\t\tthis.order = null;\n\t\t}\n\t}\n}\n\n// @ts-ignore\nwindow.BikeStore = store;"]}